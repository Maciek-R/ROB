% skrypt g��wny nie jest tym razem zbyt d�ugi% liczb� sk�adowych g��wnych dobrze by�oby zmieni�comp_count = 80; [tvec tlab tstv tstl] = readSets(); % przed redukcj� danych mo�na spojrze� na cyfry%imshow(1-reshape(tvec(1,:), 28, 28)');% oczywi�cie warto tak�e sprawdzi� etykiety[unique(tlab)'; unique(tstl)']% tutaj mo�ecie zaduma� si� Pa�stwo na moment, nad % wykrywaniem warto�ci odstaj�cych kiedy macie 784 cechy% policzenie i wykonanie redukcji wymiar�w PCA[mu trmx] = prepTransform(tvec, comp_count);tvec = pcaTransform(tvec, mu, trmx);tstv = pcaTransform(tstv, mu, trmx);% jak by�o wida�, mamy etykiet� 0, kt�ra jako indeks wypadnie s�abo% w tym �wiczeniu brutalnie przesun� wszystkie etykiety tak, % �eby najmniejsza mia�a warto�� 1tlab += 1;tstl += 1;% Do nast�pnego kroku koniecznie trzeba mie� zaimplementowan� funkcj� perceptron% Ja wyci�gn��bym sobie po 10 pr�bek z zer i jedynek i tylko % dwie pierwsze sk�adowe PCA - powinno to umo�liwi� �ledzenie post�p�w% uczenia w funkcji perceptron% przygotowanie zestawu 45 klasyfikator�w cyfrovo = trainOVOensamble(tvec, tlab, @perceptron);clab = unamvoting(tvec, ovo);cfmx = confMx(tlab, clab)compErrors(cfmx)% poniewa� tych 45 klasyfikator�w ma by� wykorzystanych w nast�pnym% eksperymencie warto je zapisa�%save("ovo_ref.txt", "ovo");%%%% TU IDZIE PA�STWA KOD %%%%% np.:% podzielenie cyfr na grupy na podstawie analizy macierzy pomy�ek i/lub innych eksperyment�w% przygotowanie zestawu klasyfikator�w przydzielaj�cych cyfry do grup% klasyfikacja cyfr w grupach% vec_v3 = tvec;%groups = [1 1 1 2 3 2 1 3 2 3]; % podzia� na 3 koszyki {0126, 358, 479}groups = [1 2 2 1 3 1 2 3 1 3]; % podzia� na 3 koszyki {0358, 126, 479}lab_v3 = prepareBuckets(tlab, groups);%----%ovo_v3 = trainOVOensamble(vec_v3, lab_v3, @perceptron);cl_lab_v3 = unamvoting(vec_v3, ovo_v3);cfmx_v3 = confMx(lab_v3, cl_lab_v3)compErrors(cfmx_v3)%save("ovo_v3.txt", "ovo_v3");% macierz pomy�ek:%   5741      1     13      2      4     46     13      3     12      6     82%      1   6552     24      9      3      7      0     15     51      3     77%     10     13   5444     57     37      7     53     33     63      9    232%      9     11     72   5525      1    179      7     25     71     31    200%      5      7     24      5   5482      4     21     14      9    139    132%     22      5     19    145     13   4837     48      3     82     25    222%     22      1     29      1     20     50   5680      1     11      0    103%      5      7     43     15     23      4      0   5871      9    126    162%      7     50     38     98      8    117     21     10   5230     30    242%      4      9     13     30    128     20      0    159     23   5365    198    %po podziale na 3 koszyki {0126, 358, 479}     %   22935    1292     259      55%    1380   15484     303     236%     354     319   17283     100     %    0.9283667   0.0651167   0.0065167% po podziale {0358, 126, 479}%    21910     978     356      82%    1136   17200     208      74%     444     227   17305      80     %     0.9402500   0.0558167   0.0039333                                % {0358, 126, 479}                              % [1 2 2 1 3 1 2 3 1 3];bucket1 = partNumbers(@find_p, combAllPairs([ 1 4 6 9 ]), ovo);  % 0 3 5 8bucket2 = partNumbers(@find_p, combAllPairs([ 2 3 7 ]), ovo);    % 1 2 6bucket3 = partNumbers(@find_p, combAllPairs([ 5 8 10 ]), ovo);   % 4 7 9% bucket1bit_vec = logical(cl_lab_v3 == 1);tvec_cut = tvec(bit_vec, :);tlab_cut = tlab(bit_vec, :);tlab_buck = prepareBuckets(tlab_cut, [ 1 0 0 2 0 3 0 0 4 0 ]); % 1 4 6 9clab_tmp = unamvoting(tvec_cut, bucket1);clab_tmp = replace(clab_, 10, 5);tlab_buck = replace(tlab_buck, 0, 5);cfmx = confMx(tlab_transformed, clab_tmp);%bad classificationbadSum = sum(cfmx(end, :))cfmx = cfmx(1:end-1, 1:end-1)% cut last row and columncompErrors(cfmx)% bucket2bit_vec = logical(cl_lab_v3 == 2);tvec_cut = tvec(bit_vec, :);tlab_cut = tlab(bit_vec, :);tlab_buck = prepareBuckets(tlab_cut, [ 0 1 2 0 0 0 3 0 0 0 ]); % 2 3 7clab_tmp = unamvoting(tvec_cut, bucket2);clab_tmp = replace(clab_, 8, 4);tlab_buck = replace(tlab_buck, 0, 4);cfmx = confMx(tlab_transformed, clab_tmp);%bad classificationbadSum = sum(cfmx(end, :))cfmx = cfmx(1:end-1, 1:end-1)% cut last row and columncompErrors(cfmx)% bucket3bit_vec = logical(cl_lab_v3 == 3);tvec_cut = tvec(bit_vec, :);tlab_cut = tlab(bit_vec, :);tlab_buck = prepareBuckets(tlab_cut, [ 0 0 0 0 1 0 0 2 0 3 0 0]);% 5 8 10clab_tmp = unamvoting(tvec_cut, bucket3);clab_tmp = replace(clab_, 11, 4);tlab_buck = replace(tlab_buck, 0, 4);cfmx = confMx(tlab_transformed, clab_tmp);% bad classificationbadSum = sum(cfmx(end, :))cfmx = cfmx(1:end-1, 1:end-1)% cut last row and columncompErrors(cfmx)